{
  "id": "snapshot_1758820361468_a38bb9cb2",
  "approvalId": "approval_1758820278694_ru3d2b8xb",
  "approvalTitle": "AI聊天MCP工具编排功能需求文档审批",
  "version": 2,
  "timestamp": "2025-09-25T17:12:41.467Z",
  "trigger": "approved",
  "status": "pending",
  "content": "# AI聊天MCP工具编排功能 — 需求说明（Requirements）\n\n## 概述\n\n本功能旨在为Appflowy产品的现有AI聊天功能增加MCP工具调用和智能体任务规划执行能力。通过全局AI聊天模型，用户可以根据需求选择MCP工具，让AI助手智能体进行任务规划、分解和执行，并提供完整的执行追溯和确认机制。\n\n### 功能范围\n- 基于现有AI聊天功能，增强MCP工具调用支持\n- 实现智能体任务规划器和执行器\n- 提供用户确认机制和执行追溯\n- 支持跨平台（macOS、Windows、Android）\n- 支持多语言（简体中文、英文）\n- 覆盖三种设置界面（服务器端、移动端、工作空间）\n\n### 产品愿景对齐\n\n此功能通过增强AI助手的工具调用能力，提升用户在文档处理、知识管理等场景下的工作效率，符合Appflowy作为智能协作平台的产品定位。\n\n## 需求\n\n### 需求1：智能体任务规划与确认机制\n\n**用户故事：** 作为Appflowy用户，我希望AI助手能够根据我的问题进行任务规划并在执行前获得我的确认，以便我能够了解和控制AI的执行计划。\n\n#### 验收标准\n\n1. 当用户在AI聊天中提出复杂问题时，系统应自动分析问题并生成任务规划\n2. 当系统生成任务规划后，应通过弹窗展示整体思路、子任务列表和所需MCP工具\n3. 当用户确认任务规划后，系统应开始执行任务并显示执行进度\n4. 当用户拒绝任务规划时，系统应回到普通聊天模式或允许用户修改需求\n\n### 需求2：MCP工具选择与调用\n\n**用户故事：** 作为Appflowy用户，我希望能够选择特定的MCP工具来帮助AI解决我的问题，以便获得更精准和专业的解答。\n\n#### 验收标准\n\n1. 当用户在聊天输入框旁看到MCP工具选择器时，应只显示已配置且可用的MCP工具\n2. 当用户选择MCP工具后，AI助手应能够调用相应工具并整合结果\n3. 当MCP工具调用失败时，系统应提供错误信息和重试选项\n4. 当工具调用成功时，系统应在回答中明确标注工具来源和引用信息\n\n### 需求3：执行过程监控与反思\n\n**用户故事：** 作为Appflowy用户，我希望能够监控AI助手的执行过程并看到其自我反思和纠错能力，以便确保任务执行的准确性。\n\n#### 验收标准\n\n1. 当AI助手执行任务时，系统应实时显示当前执行步骤和进度\n2. 当执行过程中出现问题时，AI助手应能够自我反思并调整执行策略\n3. 当任务执行完成时，系统应提供完整的执行日志和结果总结\n4. 当用户需要时，系统应允许查看详细的工具调用记录和中间结果\n\n### 需求4：执行追溯与引用管理\n\n**用户故事：** 作为Appflowy用户，我希望能够追溯AI助手的执行过程和引用来源，以便验证结果的可靠性和进行后续操作。\n\n#### 验收标准\n\n1. 当AI助手完成任务后，系统应在结果末尾列出所有引用信息和执行记录\n2. 当用户点击引用信息时，系统应能够显示具体的工具调用详情\n3. 当系统记录执行过程时，应包含时间戳、工具名称、输入参数和输出结果\n4. 当用户需要时，系统应支持导出完整的执行日志\n\n### 需求5：跨平台设置界面支持\n\n**用户故事：** 作为Appflowy用户，我希望在不同平台和设置界面中都能配置AI助手和MCP工具，以便在各种使用场景下保持一致的体验。\n\n#### 验收标准\n\n1. 当用户在服务器端设置中配置AI助手时，系统应提供完整的配置选项\n2. 当用户在移动端设置中配置AI助手时，系统应提供适配移动端的简化界面\n3. 当用户在工作空间设置中配置AI助手时，系统应支持工作空间级别的配置管理\n4. 当用户在不同设置界面间切换时，系统应保持配置的一致性和同步\n\n### 需求6：智能体个性化配置\n\n**用户故事：** 作为Appflowy用户，我希望能够创建和配置多个不同的AI助手智能体，每个都有自己的个性和工具权限，以便针对不同场景使用专门的助手。\n\n#### 验收标准\n\n1. 当用户创建新智能体时，系统应允许设置名称、个性描述和可用工具范围\n2. 当用户配置智能体个性时，系统应支持自定义System Prompt和行为约束\n3. 当用户设置工具权限时，系统应提供白名单/黑名单机制\n4. 当用户使用不同智能体时，系统应根据配置调整回答风格和工具使用策略\n\n### 需求7：会话管理与历史记录\n\n**用户故事：** 作为Appflowy用户，我希望系统能够管理我与AI助手的会话历史，并支持在会话中进行多轮对话直到问题解决，以便维护对话上下文和问题解决的连续性。\n\n#### 验收标准\n\n1. 当用户开始新的问题咨询时，系统应创建新的会话记录\n2. 当用户在同一会话中追问时，系统应保持上下文连续性\n3. 当会话包含多轮对话时，系统应能够关联所有相关的执行日志\n4. 当用户需要时，系统应支持查看和搜索历史会话记录\n\n## 非功能性需求\n\n### 代码架构和模块化\n- **单一职责原则**：每个文件应有单一、明确定义的目的\n- **模块化设计**：组件、工具和服务应隔离且可重用\n- **依赖管理**：最小化模块间的相互依赖\n- **清晰接口**：定义组件和层之间的清晰契约\n\n### 性能\n- MCP工具调用响应时间应在5秒内\n- 任务规划生成时间应在3秒内\n- 支持并发处理多个工具调用（最多3个）\n- UI操作应保持流畅，无阻塞\n\n### 安全\n- 敏感配置信息（API密钥、环境变量）应加密存储\n- 工具调用日志中的敏感数据应脱敏处理\n- 支持工具调用权限控制和访问限制\n- 提供执行日志的隐私保护选项\n\n### 可靠性\n- 工具调用失败时应有重试机制\n- 系统应能优雅处理MCP工具不可用的情况\n- 支持任务执行的取消和中断\n- 提供详细的错误信息和故障排查支持\n\n### 可用性\n- 界面应支持简体中文和英文\n- 移动端界面应适配触摸操作\n- 提供清晰的执行状态指示和进度反馈\n- 支持键盘快捷键和无障碍访问\n\n### 扩展性\n- 工具抽象应支持未来添加新类型的工具（Web搜索、RAG等）\n- 智能体框架应支持插件化扩展\n- 配置系统应支持新的MCP协议版本\n- API设计应考虑向后兼容性\n",
  "fileStats": {
    "size": 6472,
    "lines": 135,
    "lastModified": "2025-09-25T17:11:11.773Z"
  },
  "comments": []
}